<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA+hJREFUaEPt
        mTtoFEEYx8+3EF+N+EBBVFCwVFL4gCBqGbA44XJ3ye0WVwgpkkaNRGLETsVHRKxUUEsLIaCINob4QEiQ
        2JhYiCliLDQJwagk+v8u3w2bb2cvs49L9jB/+CGZ+c833+zOzM2OiQX9L0qn02saGhrO1NfXvwDPwSnb
        tldzdWUok8lsQuJ94K/gfSqV2sC2eCufzy9Dwu/EABTZbPYtedgeXyHZZpm8hma2x1NYA5uR5JhIWscY
        eblZ/IQE74qEPcFGcIebxUtIrhpMOZOdBfJWc/PYaBGSeuVI0pRuajsdIgZCQhmRoDGYYmkOM79KJpOr
        kNCgTNAHg9iSqzjc/AlJXNAk55d2Djc/sixrK5IYF0kpMG2G8O8j8BR8K5ZrGMeRZguHnXshgYciIQUG
        cauxsXEFWxO5XG4l3t5tnZd5wNa5FRI9gM69tts+3TEE62k52n3Q+IkpnNH2s3VuhISWoONekYiT02x1
        CXUtwuukl2KztfxCh7ZIYAZ46im2uoT6Oul3grYWW8srzPV16HBYJiBoYbtLSJS+UXRtigxTH2wvn7Bg
        r2g6nwE899nuEupNzmOX2V4e4WnuQSd/RKc6eriJS6h7I7w6fmPh7+Im0QsdPBMdevHTY9HSmWxEeL3o
        5DbRCm/jmKYzT+DfwU2VMPc36rxe4K0c5abRiH7YELhfdlQKDKSWmyth7RzWeUvQ7/xRDS0ENPl8lbh+
        S1B2UnhmBQ+kiZuHE08H03mtwNO/xyGUUH5d+gwYoRw4RHAh0E0R2JTXHEIJZU+Exwi8lQ4OEUx4qvsQ
        aFIGNmSYwyih7KPwmDKJwezlML5FW2WXCOgLPAj1wdTW1rYYZRPS44MuhPH/WYwncEITzBeY27s5XPH2
        UeszBQ8myeHMRFseGn3SBfMDHsYlkCcQL4ovyQFf2zE6PacJEhdaOc3S4ikwKhqH4RejqwvCKOXI6XoL
        RuPbwlmgHeoIfSkSdNzA375OB15gqpa+pURnh2D0c1uoBR0NWZa1nsMqURnqv0p/ACjHgxzWJdpuux3m
        wNDC5pguof6i9AdEf0uJisC3hRrqOKxLeFtpjT8QFIvDTgtPsAoVYW4LZ4B4Zzm0S6hvlf4QfKHcOXQh
        eLswhOUzFvhaDq9EZVQnvKHAWzlfCE7/aYmCH9IQAS/Rifq4wkayE2WhjjwefKf7Z5pWOU1lVNDuMsCE
        3g29wBiytPg6dJWVBMZxjdbHDVlRgVylgRwXhRUHZlVt8TuhU1ZWChjEYxpDYUehsxAK6YKhx2mKOT0Y
        RFNNTc3SwiCk6LyPD6Jttm1vjyOUW6RXRAtaUCklEv8AqNc/u/nFvS8AAAAASUVORK5CYII=
</value>
  </data>
</root>