<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPoSURBVGhD7Zk7aBRBGMfPtxBfjfhAQVRQsFRS+IAgahmwOOFyd8ntFlcIKZJGjURixE7FR0Ss
        VFBLCyGgiDaG+EBIkNiYWIgpYiw0CcGoJPr/Lt8Nm29nL7OPS/Ywf/ghmfnPN9/szszNjokF/S9Kp9Nr
        GhoaztTX178Az8Ep27ZXc3VlKJPJbELifeCv4H0qldrAtngrn88vQ8LvxAAU2Wz2LXnYHl8h2WaZvIZm
        tsdTWAObkeSYSFrHGHm5WfyEBO+KhD3BRnCHm8VLSK4aTDmTnQXyVnPz2GgRknrlSNKUbmo7HSIGQkIZ
        kaAxmGJpDjO/SiaTq5DQoEzQB4PYkqs43PwJSVzQJOeXdg43P7IsayuSGBdJKTBthvDvI/AUfCuWaxjH
        kWYLh517IYGHIiEFBnGrsbFxBVsTuVxuJd7ebZ2XecDWuRUSPYDOvbbbPt0xBOtpOdp90PiJKZzR9rN1
        boSElqDjXpGIk9NsdQl1LcLrpJdis7X8Qoe2SGAGeOoptrqE+jrpd4K2FlvLK8z1dehwWCYgaGG7S0iU
        vlF0bYoMUx9sL5+wYK9oOp8BPPfZ7hLqTc5jl9leHuFp7kEnf0SnOnq4iUuoeyO8On5j4e/iJtELHTwT
        HXrx02PR0plsRHi96OQ20Qpv45imM0/g38FNlTD3N+q8XuCtHOWm0Yh+2BC4X3ZUCgyklpsrYe0c1nlL
        0O/8UQ0tBDT5fJW4fktQdlJ4ZgUPpImbhxNPB9N5rcDTv8chlFB+XfoMGKEcOERwIdBNEdiU1xxCCWVP
        hMcIvJUODhFMeKr7EGhSBjZkmMMooeyj8JgyicHs5TC+RVtllwjoCzwI9cHU1ta2GGUT0uODLoTx/1mM
        J3BCE8wXmNu7OVzx9lHrMwUPJsnhzERbHhp90gXzAx7GJZAnEC+KL8kBX9sxOj2nCRIXWjnN0uIpMCoa
        h+EXo6sLwijlyOl6C0bj28JZoB3qCH0pEnTcwN++TgdeYKqWvqVEZ4dg9HNbqAUdDVmWtZ7DKlEZ6r9K
        fwAox4Mc1iXabrsd5sDQwuaYLqH+ovQHRH9LiYrAt4Ua6jisS3hbaY0/EBSLw04LT7AKFWFuC2eAeGc5
        tEuob5X+EHyh3Dl0IXi7MITlMxb4Wg6vRGVUJ7yhwFs5XwhO/2mJgh/SEAEv0Yn6uMJGshNloY48Hnyn
        +2eaVjlNZVTQ7jLAhN4NvcAYsrT4OnSVlQTGcY3Wxw1ZUYFcpYEcF4UVB2ZVbfE7oVNWVgoYxGMaQ2FH
        obMQCumCocdpijk9GERTTU3N0sIgpOi8jw+ibbZtb48jlFukV0QLWlApJRL/AKjXP7v5xb0vAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>